// ================
// Gradle configuration

plugins {
	id 'java-library'
	id 'maven-publish'
	id 'com.jfrog.bintray' version '1.8.4'
	id 'org.jetbrains.kotlin.jvm' version '1.3.61'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.61'

	// https://github.com/palantir/gradle-git-version
	id 'com.palantir.git-version' version '0.12.2'

	// code quality plugins
	id 'jacoco'
	id 'org.jmailen.kotlinter' version '2.3.0'
	id 'io.gitlab.arturbosch.detekt' version '1.5.1'
	id 'org.jetbrains.dokka' version '0.10.1'

}

wrapper {
	gradleVersion = '6.0.1'
	distributionType = Wrapper.DistributionType.ALL
}

// ================
// Project metadata configuration

group = 'org.polycreo'
version = gitVersion()

// ================
// Build configuration

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
		allWarningsAsErrors = true
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
		allWarningsAsErrors = true
	}
}

repositories {
	jcenter()
	mavenCentral()
	maven { url 'https://dl.bintray.com/polycreo/maven' }
}

dependencies {
	api 'com.fasterxml.jackson.module:jackson-module-kotlin:2.10.2'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'com.willowtreeapps.assertk:assertk-jvm:0.21' // https://www.kotlinresources.com/library/assertk/
	implementation 'com.jayway.jsonpath:json-path:2.4.0'

	// test
	testImplementation 'org.jetbrains.kotlin:kotlin-reflect'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.2'
	testImplementation 'com.nhaarman:mockito-kotlin:1.6.0'

	// build
	detektPlugins 'io.gitlab.arturbosch.detekt:detekt-formatting:1.5.1'
}

// ================
// Lint / Test configuration

detekt {
	failFast = true
	reports {
		html.enabled = true
		xml.enabled = true
	}
}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
    }
}

tasks.withType(Test) {
	exclude "**/*\$*", "**/*Tests.class", "**/examples/**"
	reports {
		html.enabled = true
		junitXml.outputPerTestCase = false
	}
	testLogging.exceptionFormat = 'full'
	beforeTest {
		logger.lifecycle("{} > {}", it.parent.name, it.name)
	}
}

// ================
// Deploy configuration

apply from: "${rootProject.projectDir}/gradle/sourceArtifact.gradle"
apply from: "${rootProject.projectDir}/gradle/publish.gradle"
